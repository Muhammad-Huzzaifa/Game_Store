# Generated by Django 5.0.14 on 2025-05-09 16:15

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DiscountCodes',
            fields=[
                ('discount_code_id', models.AutoField(primary_key=True, serialize=False)),
                ('code', models.CharField(max_length=20, unique=True)),
                ('discount_percentage', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)])),
                ('valid_from', models.DateTimeField()),
                ('valid_to', models.DateTimeField()),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'db_table': 'discount_codes',
            },
        ),
        migrations.CreateModel(
            name='Games',
            fields=[
                ('game_id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True, null=True)),
                ('genre', models.CharField(blank=True, max_length=100, null=True)),
                ('platform', models.CharField(blank=True, max_length=100, null=True)),
                ('developer', models.CharField(blank=True, max_length=100, null=True)),
                ('publisher', models.CharField(blank=True, max_length=100, null=True)),
                ('release_date', models.DateField(blank=True, null=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('cover_image', models.CharField(max_length=500)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'db_table': 'games',
            },
        ),
        migrations.CreateModel(
            name='Inventory',
            fields=[
                ('inventory_id', models.AutoField(primary_key=True, serialize=False)),
                ('stock_quantity', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
            ],
            options={
                'db_table': 'inventory',
            },
        ),
        migrations.CreateModel(
            name='OrderItems',
            fields=[
                ('order_item_id', models.AutoField(primary_key=True, serialize=False)),
                ('quantity', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('price_at_purchase', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
            ],
            options={
                'db_table': 'order_items',
            },
        ),
        migrations.CreateModel(
            name='Orders',
            fields=[
                ('order_id', models.AutoField(primary_key=True, serialize=False)),
                ('order_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('status', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'orders',
            },
        ),
        migrations.CreateModel(
            name='Payments',
            fields=[
                ('payment_id', models.AutoField(primary_key=True, serialize=False)),
                ('payment_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('payment_status', models.CharField(max_length=50)),
                ('payment_method', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'payments',
            },
        ),
        migrations.CreateModel(
            name='Carts',
            fields=[
                ('cart_id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'carts',
            },
        ),
        migrations.CreateModel(
            name='CartItems',
            fields=[
                ('cart_item_id', models.AutoField(primary_key=True, serialize=False)),
                ('quantity', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('cart', models.ForeignKey(db_column='cart_id', on_delete=django.db.models.deletion.CASCADE, to='store.carts')),
            ],
            options={
                'db_table': 'cart_items',
            },
        ),
        migrations.AddConstraint(
            model_name='discountcodes',
            constraint=models.CheckConstraint(check=models.Q(('valid_to__gt', models.F('valid_from'))), name='valid_to_after_valid_from'),
        ),
        migrations.AddField(
            model_name='cartitems',
            name='game',
            field=models.ForeignKey(db_column='game_id', on_delete=django.db.models.deletion.CASCADE, to='store.games'),
        ),
        migrations.AddField(
            model_name='inventory',
            name='game',
            field=models.OneToOneField(db_column='game_id', on_delete=django.db.models.deletion.CASCADE, to='store.games'),
        ),
        migrations.AddField(
            model_name='orderitems',
            name='game',
            field=models.ForeignKey(db_column='game_id', on_delete=django.db.models.deletion.CASCADE, to='store.games'),
        ),
        migrations.AddField(
            model_name='orders',
            name='discount_code',
            field=models.ForeignKey(blank=True, db_column='discount_code_id', null=True, on_delete=django.db.models.deletion.CASCADE, to='store.discountcodes'),
        ),
        migrations.AddField(
            model_name='orders',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='orderitems',
            name='order',
            field=models.ForeignKey(db_column='order_id', on_delete=django.db.models.deletion.CASCADE, to='store.orders'),
        ),
        migrations.AddField(
            model_name='payments',
            name='order',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='store.orders'),
        ),
        migrations.AlterUniqueTogether(
            name='cartitems',
            unique_together={('cart', 'game')},
        ),
        migrations.AddConstraint(
            model_name='orders',
            constraint=models.CheckConstraint(check=models.Q(('status__in', ['Processing', 'Shipped', 'Delivered'])), name='status_check'),
        ),
        migrations.AlterUniqueTogether(
            name='orderitems',
            unique_together={('order', 'game')},
        ),
        migrations.AddConstraint(
            model_name='payments',
            constraint=models.CheckConstraint(check=models.Q(('payment_status__in', ['Pending', 'Completed', 'Failed'])), name='payment_status_check'),
        ),
        migrations.AddConstraint(
            model_name='payments',
            constraint=models.CheckConstraint(check=models.Q(('payment_method__in', ['Credit Card', 'Bank Transfer', 'Cash'])), name='payment_method_check'),
        ),
    ]
